// <auto-generated />
using System;
using System.Diagnostics.CodeAnalysis;
using AlfaBank.Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AlfaBank.WebApi.Migrations
{
    [DbContext(typeof(SqlContext))]
    [Migration("20190419222011_ver1")]
    partial class ver1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("AlfaBank.Core.Models.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CardName")
                        .IsRequired();

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasMaxLength(19);

                    b.Property<int>("CardType");

                    b.Property<int>("Currency");

                    b.Property<DateTime>("DtOpenCard");

                    b.Property<int>("UserId");

                    b.Property<int>("ValidityYear");

                    b.HasKey("Id");

                    b.HasIndex("CardNumber");

                    b.HasIndex("UserId");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CardName = "my salary",
                            CardNumber = "6271190189011743",
                            CardType = 2,
                            Currency = 0,
                            DtOpenCard = new DateTime(2017, 4, 20, 0, 0, 0, 0, DateTimeKind.Local),
                            UserId = 1,
                            ValidityYear = 3
                        },
                        new
                        {
                            Id = 2,
                            CardName = "my salary",
                            CardNumber = "6762302693240520",
                            CardType = 3,
                            Currency = 0,
                            DtOpenCard = new DateTime(2017, 4, 20, 0, 0, 0, 0, DateTimeKind.Local),
                            UserId = 1,
                            ValidityYear = 3
                        },
                        new
                        {
                            Id = 3,
                            CardName = "my debt",
                            CardNumber = "4083967629457310",
                            CardType = 2,
                            Currency = 2,
                            DtOpenCard = new DateTime(2017, 4, 20, 0, 0, 0, 0, DateTimeKind.Local),
                            UserId = 1,
                            ValidityYear = 3
                        },
                        new
                        {
                            Id = 4,
                            CardName = "for my lovely wife",
                            CardNumber = "5101265622568232",
                            CardType = 1,
                            Currency = 1,
                            DtOpenCard = new DateTime(2017, 4, 20, 0, 0, 0, 0, DateTimeKind.Local),
                            UserId = 1,
                            ValidityYear = 3
                        });
                });

            modelBuilder.Entity("AlfaBank.Core.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CardFromNumber");

                    b.Property<int>("CardId");

                    b.Property<string>("CardToNumber");

                    b.Property<DateTime>("DateTime");

                    b.Property<decimal>("Sum");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CardId = 1,
                            CardToNumber = "6271190189011743",
                            DateTime = new DateTime(2019, 4, 20, 1, 20, 10, 239, DateTimeKind.Local).AddTicks(6500),
                            Sum = 10m
                        },
                        new
                        {
                            Id = 2,
                            CardId = 2,
                            CardToNumber = "6762302693240520",
                            DateTime = new DateTime(2019, 4, 20, 1, 20, 10, 240, DateTimeKind.Local).AddTicks(6250),
                            Sum = 10m
                        },
                        new
                        {
                            Id = 3,
                            CardId = 3,
                            CardToNumber = "4083967629457310",
                            DateTime = new DateTime(2019, 4, 20, 1, 20, 10, 240, DateTimeKind.Local).AddTicks(6300),
                            Sum = 0.1376651982378854625550660793m
                        },
                        new
                        {
                            Id = 4,
                            CardId = 4,
                            CardToNumber = "5101265622568232",
                            DateTime = new DateTime(2019, 4, 20, 1, 20, 10, 244, DateTimeKind.Local).AddTicks(8420),
                            Sum = 0.1595405232929164007657945118m
                        });
                });

            modelBuilder.Entity("AlfaBank.Core.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("Birthday");

                    b.Property<string>("Firstname");

                    b.Property<string>("Surname");

                    b.Property<string>("UserName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserName");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UserName = "admin@admin.ru"
                        },
                        new
                        {
                            Id = 2,
                            UserName = "user@user.ru"
                        });
                });

            modelBuilder.Entity("AlfaBank.Core.Models.Card", b =>
                {
                    b.HasOne("AlfaBank.Core.Models.User", "User")
                        .WithMany("Cards")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AlfaBank.Core.Models.Transaction", b =>
                {
                    b.HasOne("AlfaBank.Core.Models.Card", "Card")
                        .WithMany("Transactions")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
